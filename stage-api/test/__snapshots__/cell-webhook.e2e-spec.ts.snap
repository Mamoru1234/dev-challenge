// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Cell webhooks POST /:sheet_id/:cell_id/subscribe invalid request no webhook url 1`] = `
{
  "error": "Bad Request",
  "message": [
    "webhookUrl must be shorter than or equal to 1024 characters",
    "webhookUrl must be a URL address",
    "webhookUrl must be a string",
  ],
  "statusCode": 400,
}
`;

exports[`Cell webhooks POST /:sheet_id/:cell_id/subscribe invalid request url without https 1`] = `
{
  "error": "Bad Request",
  "message": [
    "webhookUrl must be a URL address",
  ],
  "statusCode": 400,
}
`;

exports[`Cell webhooks POST /:sheet_id/:cell_id/subscribe invalid request url without protocol 1`] = `
{
  "error": "Bad Request",
  "message": [
    "webhookUrl must be a URL address",
  ],
  "statusCode": 400,
}
`;

exports[`Cell webhooks POST /:sheet_id/:cell_id/subscribe invalid request webhook is invalid url 1`] = `
{
  "error": "Bad Request",
  "message": [
    "webhookUrl must be a URL address",
  ],
  "statusCode": 400,
}
`;

exports[`Cell webhooks POST /:sheet_id/:cell_id/subscribe should call hook for cells updated 1`] = `
[
  [
    "https://test.service.com/hook",
    {
      "result": "4",
      "value": "=a+1",
    },
  ],
  [
    "https://test.service.com/hook_c",
    {
      "result": "5",
      "value": "=B+1",
    },
  ],
]
`;

exports[`Cell webhooks POST /:sheet_id/:cell_id/subscribe should call hook only for cells updated 1`] = `
[
  [
    "https://test.service.com/hook",
    {
      "result": "4",
      "value": "=a+1",
    },
  ],
]
`;

exports[`Cell webhooks POST /:sheet_id/:cell_id/subscribe should call hook when value update 1`] = `
[
  [
    "https://test.service.com/hook",
    {
      "result": "aTestValue",
      "value": "aTestValue",
    },
  ],
]
`;

exports[`Cell webhooks POST /:sheet_id/:cell_id/subscribe should create subscription 1`] = `
[
  {
    "url": "https://www.google.com",
  },
]
`;
